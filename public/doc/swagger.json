{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Barefoot Nomad API Documentation",
    "description": "Make company global travel and accommodation easy and convenient for the strong workforce of savvy members of staff, by leveraging the modern web.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3002",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "create an account",
        "tags": [
          "Sign up"
        ],
        "description": "User sign up endpoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User information",
            "in": "body",
            "description": "User information required for sign up",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/responses/signupSuccess"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/responses/signupFail"
            }
          }
        }
      }
    },
    "/auth/confirmation/:token": {
      "get": {
        "summary": "Confirm",
        "tags": [
          "Confirm"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/responses/confirm"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User Login",
        "tags": [
          "Authentication"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "email",
            "description": "Email for securing user's account"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "password",
            "description": "Password for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "This is how the response looks like when login is successful",
            "schema": {
              "$ref": "#/responses/login-response-real-data"
            }
          },
          "400": {
            "description": "This is how the response looks like when a user sends empty email, or empty password or both empty",
            "schema": {
              "$ref": "#/responses/login-response-empty-data"
            }
          },
          "401": {
            "description": "This is how the response looks like when a user sends wrong email or password",
            "schema": {
              "$ref": "#/responses/login-response-wrong-data"
            }
          }
        }
      }
    },
    "/auth/reset": {
      "post": {
        "summary": "Reset email",
        "tags": [
          "Authentication"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User email",
            "in": "body",
            "description": "email for a user ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is how the response looks like when user exist and an email is successful sent",
            "schema": {
              "$ref": "#/responses/reset-password-email-success"
            }
          },
          "403": {
            "description": "This is how the response looks like when a user does not exist",
            "schema": {
              "$ref": "#/responses/reset-password-email-fail"
            }
          }
        }
      }
    },
    "/auth/update-passord/:token": {
      "put": {
        "summary": "update password",
        "tags": [
          "Authentication"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User password",
            "in": "body",
            "description": "the new password ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updatePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is the response when password is updated",
            "schema": {
              "$ref": "#/responses/update-password-success"
            }
          }
        }
      }
    },
    "/auth/update-profile": {
      "put": {
        "summary": "Update profile",
        "tags": [
          "Authentication"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User information",
            "in": "body",
            "description": "User information required for sign up",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/responses/profileUpdate"
            }
          }
        }
      }
    },
    "/employee/create": {
      "post": {
        "summary": "create employee",
        "tags": [
          "Employee"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User information",
            "in": "body",
            "description": "User information required for sign up",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createEmployee"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201",
            "schema": {
              "$ref": "#/responses/employeeCreateSuccess"
            }
          }
        }
      }
    },
    "/employee/upload-data": {
      "post": {
        "summary": "upload employee's data",
        "tags": [
          "Employee"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "binary",
            "description": "Excel file containing employee's data"
          }
        ],
        "responses": {
          "201": {
            "description": "201",
            "schema": {
              "$ref": "#/responses/employeeCreateSuccess"
            }
          }
        }
      }
    },
    "/employee/": {
      "get": {
        "summary": "get employees",
        "tags": [
          "Employee"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/responses/employeesreturnsuccess"
            }
          }
        }
      }
    },
    "/employee/search": {
      "get": {
        "summary": "get searched employee",
        "tags": [
          "Employee"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "position",
            "in": "query",
            "description": "position",
            "schema": {
              "position": {
                "type": "string"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "schema": {
              "name": {
                "type": "string"
              }
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "email",
            "schema": {
              "email": {
                "type": "string"
              }
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "schema": {
              "code": {
                "type": "string"
              }
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "phoneNumber",
            "schema": {
              "phoneNumber": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/responses/employeeSearchreturnSuccess"
            }
          }
        }
      }
    },
    "/employee/:id": {
      "get": {
        "summary": "get employee by id",
        "tags": [
          "Employee"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/responses/employeereturnSuccess"
            }
          }
        }
      }
    },
    "/employee/:id/edit": {
      "put": {
        "summary": "edit employee",
        "tags": [
          "Employee"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User information",
            "in": "body",
            "description": "User information required for sign up",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateEmployee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/responses/employeeUpdateSuccess"
            }
          }
        }
      }
    },
    "/employee/:id/suspend": {
      "put": {
        "summary": "suspend employee",
        "tags": [
          "Employee"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User information",
            "in": "body",
            "description": "User information required for sign up",
            "required": true,
            "schema": {
              "$ref": "#/definitions/suspend"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/responses/employeeUpdateSuccess"
            }
          }
        }
      }
    },
    "/employee/:id/activate": {
      "put": {
        "summary": "activate employee",
        "tags": [
          "Employee"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User information",
            "in": "body",
            "description": "User information required for sign up",
            "required": true,
            "schema": {
              "$ref": "#/definitions/activateStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/responses/employeeUpdateSuccess"
            }
          }
        }
      }
    },
    "/employee/:id/delete": {
      "delete": {
        "summary": "delete employee",
        "tags": [
          "Employee"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/responses/employeeDeleteSuccess"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "signup": {
      "properties": {
        "firstName": {
          "type": "string",
          "required": true,
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "required": true,
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "required": true,
          "example": "john@doe.com"
        },
        "phoneNumber": {
          "type": "string",
          "required": true,
          "example": "+250789437820"
        },
        "password": {
          "type": "string",
          "required": true,
          "example": "Password@32"
        }
      }
    },
    "userProfileHeaders": {
      "properties": {
        "toke": {
          "type": "string",
          "required": true,
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        }
      }
    },
    "resetEmail": {
      "email": {
        "type": "string",
        "required": true,
        "example": "john@doe.com"
      }
    },
    "updatePassword": {
      "password": {
        "type": "string",
        "required": true,
        "example": "didiny"
      },
      "password_confirmation": {
        "type": "string",
        "required": true,
        "example": "didiny"
      }
    },
    "updateProfile": {
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "phoneNumber": {
          "type": "string",
          "example": "+250789437820"
        },
        "password": {
          "type": "string",
          "example": "Password@32"
        }
      }
    },
    "createEmployee": {
      "properties": {
        "firstName": {
          "type": "string",
          "required": true,
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "required": true,
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "required": true,
          "example": "john@doe.com"
        },
        "phoneNumber": {
          "type": "string",
          "required": true,
          "example": "+250789437820"
        },
        "nationalId": {
          "type": "string",
          "required": true,
          "example": "Password@32"
        },
        "dateOfBirth": {
          "type": "string",
          "required": true,
          "example": "1999-01-01"
        },
        "status": {
          "type": "string",
          "required": true,
          "enum": ["INACTIVE", "ACTIVE"]
        },
        "position": {
          "type": "string",
          "required": true,
          "enum": ["DEVELOPER", "DESIGNER", "TESTER", "DEVOPS"]
        }
      }
    },
    "updateEmployee": {
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "phoneNumber": {
          "type": "string",
          "example": "+250789437820"
        },
        "nationalId": {
          "type": "string",
          "example": "Password@32"
        },
        "dateOfBirth": {
          "type": "string",
          "example": "1999-01-01"
        },
        "status": {
          "type": "string",
          "enum": ["INACTIVE", "ACTIVE"]
        },
        "position": {
          "type": "string",
          "enum": ["DEVELOPER", "DESIGNER", "TESTER", "DEVOPS"]
        }
      }
    },
    "suspend": {
      "properties": {
        "status": {
          "type": "string",
          "required": true,
          "enum":["0", "1"]
        }
      }
    },
    "activateStatus": {
      "properties": {
        "status": {
          "type": "string",
          "required": true,
          "enum":["INACTIVE", "ACTIVE"]
        }
      }
    },
    "SearchTripRequests": {
      "field": {
        "type": "string",
        "required": true,
        "example": "travelDate"
      },
      "search": {
        "type": "string",
        "required": true,
        "example": "2020-01-01"
      },
      "limit": {
        "type": "integer",
        "required": true,
        "example": "30"
      },
      "offset": {
        "type": "integer",
        "required": true,
        "example": "0"
      }
    },
    "ViewTripsStats": {
      "startDate": {
        "type": "date",
        "required": true,
        "example": "2020-01-01"
      },
      "endDate": {
        "type": "date",
        "required": true,
        "example": "2020-01-08"
      }
    },
    "BookAccommodation": {
      "arrivalDate": {
        "type": "date",
        "required": true,
        "example": "2020-01-01"
      },
      "departureDate": {
        "type": "date",
        "required": true,
        "example": "2020-01-01"
      },
      "tripRequestId": {
        "type": "number",
        "required": true,
        "example": 1
      },
      "accommodationId": {
        "type": "number",
        "required": true,
        "example": 1
      }
    }
  },
  "responses": {
    "signupSuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "You successfully created your account"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR....."
        }
      }
    },
    "signupFail": {
      "properties": {
        "error": {
          "type": "string",
          "example": "User with that email already exist"
        }
      }
    },
    "login-response-real-data": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Great! You successfully logged in"
        }
      }
    },
    "login-response-empty-data": {
      "properties": {
        "error": {
          "type": "string",
          "example": "empty field"
        }
      }
    },
    "login-response-wrong-data": {
      "properties": {
        "error": {
          "type": "string",
          "example": "Email or password is incorrect"
        }
      }
    },
    "reset-password-email-success": {
      "properties": {
        "message": {
          "type": "string",
          "example": "You can reset password"
        }
      }
    },
    "reset-password-email-fail": {
      "properties": {
        "error": {
          "type": "string",
          "example": "User with that email not found"
        }
      }
    },
    "update-password-success": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Well done! You have successfully updated your password"
        }
      }
    },
    "profileUpdate": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Profile updated successfully"
        }
      }
    },
    "confirm": {
      "properties": {
        "message": {
          "type": "string",
          "example": "You successfully confirmed your account"
        }
      }
    },
    "notConfirmed": {
      "properties": {
        "error": {
          "type": "string",
          "example": "Please Confirm your account"
        }
      }
    },
    "tokenNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Token not found"
        }
      }
    },
    "tokenInvalid": {
      "properties": {
        "error": {
          "type": "string",
          "example": "Token is Invalid"
        }
      }
    },
    "employeesreturnsuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "All Employee returned successfully"
        }
      }
    },
    "employeeSearchreturnSuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "All searched Employee returned successfully"
        }
      }
    },
    "employeereturnSuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "A Employee returned successfully"
        }
      }
    },
    "employeeCreateSuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Employee created successfully"
        }
      }
    },
    "employeeUpdateSuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Employee updated successfully"
        }
      }
    },
    "employeeStatusSuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Employee activation done successfully"
        }
      }
    },
    "employeeSuspensionSuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Employee Suspension done successfully"
        }
      }
    },
    "employeeDeleteSuccess": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Employee deleted successfully"
        }
      }
    },
    "trip-request-update": {
      "properties": {
        "message": {
          "type": "string",
          "example": {
          "message":"The request is updated successfully"
          }
        }
      }
    }
  }
}